<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.mapper.SysProjectMapper">

    <resultMap type="SysProject" id="SysProjectResult">
        <result property="projectId" column="project_id"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="projectContent" column="project_content"/>
        <result property="accessorId" column="accessor_id"/>
        <result property="auditorId" column="auditor_id"/>
        <result property="projectStatus" column="project_status"/>
        <result property="estimatedTime" column="estimated_time"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectProjectVo">
        select project_id, tenant_id, name, description, project_content, accessor_id, auditor_id, project_status, estimated_time, create_by, create_time, update_by, update_time, remark
        from sys_project
    </sql>

    <select id="selectProjectById" parameterType="Long" resultMap="SysProjectResult">
        <include refid="selectProjectVo"/>
        where project_id = #{projectId}
    </select>

    <select id="selectProjectList" parameterType="SysProject" resultMap="SysProjectResult">
        <include refid="selectProjectVo"/>
        <where>
            <if test="name != null and name != ''">
                AND name like concat('%', #{name}, '%')
            </if>
            <if test="projectStatus != null and projectStatus != ''">
                AND project_status = #{projectStatus}
            </if>
            <if test="createBy != null and createBy != ''">
                AND create_by like concat('%', #{createBy}, '%')
            </if>
        </where>
    </select>

    <insert id="insertProject" parameterType="SysProject">
        insert into sys_project (
            tenant_id, name, description, project_content, accessor_id, auditor_id, project_status, estimated_time, create_by, create_time, update_by, update_time, remark
        ) values (
                     #{tenantId}, #{name}, #{description}, #{projectContent}, #{accessorId}, #{auditorId}, #{projectStatus}, #{estimatedTime}, #{createBy}, sysdate(), #{updateBy}, #{updateTime}, #{remark}
                 )
    </insert>

    <update id="updateProject" parameterType="SysProject">
        update sys_project
        <set>
            <if test="tenantId != null">tenant_id = #{tenantId}, </if>
            <if test="name != null">name = #{name}, </if>
            <if test="description != null">description = #{description}, </if>
            <if test="projectContent != null">project_content = #{projectContent}, </if>
            <if test="accessorId != null">accessor_id = #{accessorId}, </if>
            <if test="auditorId != null">auditor_id = #{auditorId}, </if>
            <if test="projectStatus != null">project_status = #{projectStatus}, </if>
            <if test="estimatedTime != null">estimated_time = #{estimatedTime}, </if>
            <if test="updateBy != null">update_by = #{updateBy}, </if>
            update_time = sysdate(),
            <if test="remark != null">remark = #{remark} </if>
        </set>
        where project_id = #{projectId}
    </update>

    <delete id="deleteProjectById" parameterType="Long">
        delete from sys_project where project_id = #{projectId}
    </delete>

    <delete id="deleteProjectByIds" parameterType="Long">
        delete from sys_project where project_id in
        <foreach item="projectId" collection="array" open="(" separator="," close=")">
            #{projectId}
        </foreach>
    </delete>

</mapper>